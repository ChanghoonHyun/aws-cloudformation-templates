AWSTemplateFormatVersion: 2010-09-09
Description: firehose
Parameters:
  AppName:
    Type: String
    Description: Name of the application.
    MinLength: '1'
    MaxLength: '80'
    AllowedPattern: '[A-Za-z0-9-]+'
    ConstraintDescription: >-
      Malformed input parameter. AppName must only contain upper and lower case
      letters, numbers, and -.
    Default: CommonVpcStack
Resources:
  LogBucket:
    Description: access log bucket
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub 'access-log-${AWS::AccountId}-${AWS::Region}-${AppName}'
      VersioningConfiguration:
        Status: Enabled
  LogBucketPolicy:
    DependsOn:
      - LogBucket
    Description: access log bucket access
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref LogBucket
      PolicyDocument:
        Version: 2012-10-17
        Id: SSEAndSSLPolicy
        Statement:
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${LogBucket}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false
  FirehoseRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub '${AppName}-firehose-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - firehose.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
  FirehoseRolePolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: FirehoseRole
    Description: IAM policy for firehose role
    Properties:
      PolicyName: !Sub '${AppName}-firehose-role-policy'
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'logs:*'
            Resource:
              - '*'
          - Effect: Allow
            Action:
              - 's3:*'
            Resource:
              - '*'
          - Effect: Allow
            Resource:
              - '*'
            Action:
              - 'kms:*'
      Roles:
        - !Ref FirehoseRole
  Firehose:
    Type: 'AWS::KinesisFirehose::DeliveryStream'
    Properties:
      DeliveryStreamName: !Sub '${AppName}-stream'
      DeliveryStreamType: 'DirectPut'
      ExtendedS3DestinationConfiguration:
        BucketARN: 
          !GetAtt
            - LogBucket
            - Arn
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 3
        CompressionFormat: 'UNCOMPRESSED'
        Prefix: 'YYYY/MM/DD/HH'
        ProcessingConfiguration:
          Enabled: false
        RoleARN: 
          !GetAtt
            - FirehoseRole
            - Arn
