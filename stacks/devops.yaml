AWSTemplateFormatVersion: 2010-09-09
Description: app CI & CD
Parameters:
  AppName:
    Type: String
    Description: Name of the application.
    MinLength: '1'
    MaxLength: '80'
    AllowedPattern: '[A-Za-z0-9-]+'
    ConstraintDescription: >-
      Malformed input parameter. AppName must only contain upper and lower case
      letters, numbers, and -.
  ManagerEmail:
    Type: String
    Description: Email of manager
    MinLength: '1'
    MaxLength: '80'
  StagingBuildSpec:
    Type: String
    Description: The filename for the serverless transform file.
    Default: staging-buildspec.yaml
  ProductionBuildSpec:
    Type: String
    Description: The filename for the serverless transform file.
    Default: prod-buildspec.yaml
  ProdConfigFolder:
    Type: String
    Description: The filename for the output file from the buildspec file.
    Default: prod
  StagingConfigFolder:
    Type: String
    Description: The filename for the output file from the buildspec file.
    Default: staging
  StagingSAMInputFile:
    Type: String
    Description: The filename for the serverless transform file.
    Default: staging-sam.yaml
  SAMInputFile:
    Type: String
    Description: The filename for the serverless transform file.
    Default: prod-sam.yaml
  SAMOutputFile:
    Type: String
    Description: The filename for the output file from the buildspec file.
    Default: prod-post-package.yaml
  StagingSAMOutputFile:
    Type: String
    Description: The filename for the output file from the buildspec file.
    Default: staging-post-package.yaml
  CodeBuildImage:
    Type: String
    Default: 'aws/codebuild/nodejs:7.0.0'
    Description: Image used for CodeBuild project.
  GitHubRepoName:
    Type: String
    Description: The GitHub repo name
  GitHubRepoBranch:
    Type: String
    Description: The GitHub repo branch code pipelines should watch for changes on
    Default: master
  GitHubUser:
    Type: String
    Description: GitHub UserName. This username must have access to the GitHubToken.
  GitHubToken:
    NoEcho: true
    Type: String
    Description: >-
      Secret. OAuthToken with access to Repo. Long string of characters and
      digits. Go to https://github.com/settings/tokens
Resources:
  AppSg:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !ImportValue ExportCommonInfraVpcId
      GroupName: !Sub '${AppName}DefaultGroup'
      GroupDescription: default group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${AppName}-Sg'
        - Key: ResourceType
          Value: !Sub '${AppName}'
  CodeBuildTrustRole:
    Description: Creating service role in IAM for AWS CodeBuild
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AppName}-codebuild-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 75798529-a7c4-4ee9-a431-a39b25eea33f
  CodeBuildRolePolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: CodeBuildTrustRole
    Description: Setting IAM policy for the service role for AWS CodeBuild
    Properties:
      PolicyName: !Sub '${AppName}-codebuild-role-policy'
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource:
              - '*'
          - Effect: Allow
            Resource:
              - '*'
            Action:
              - 's3:*'
          - Effect: Allow
            Resource:
              - '*'
            Action:
              - 'kms:GenerateDataKey*'
              - 'kms:Encrypt'
              - 'kms:Decrypt'
          - Effect: Allow
            Resource:
              - '*'
            Action:
              - 'sns:SendMessage'
      Roles:
        - !Ref CodeBuildTrustRole
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 06cc17e6-63fd-4610-b21b-fe7c1fc34798
  CloudFormationTrustRole:
    Description: Creating service role in IAM for AWS CloudFormation
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AppName}-cloudformation-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
    Metadata:
      'AWS::CloudFormation::Designer':
        id: be35d113-7edf-43ad-aaef-c48663107148
  CloudFormationRolePolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: CloudFormationTrustRole
    Description: Setting IAM policy for the service role for AWS CloudFormation
    Properties:
      PolicyName: !Sub '${AppName}-cloudformation-role-policy'
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetBucketVersioning'
            Resource: '*'
            Effect: Allow
          - Action:
              - 's3:PutObject'
            Resource:
              - 'arn:aws:s3:::codepipeline*'
            Effect: Allow
          - Action:
              - 'lambda:*'
            Resource: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*'
            Effect: Allow
          - Action:
              - 'lambda:ListTags'
              - 'lambda:TagResource'
              - 'lambda:UntagResource'
            Resource: '*'
            Effect: Allow
          - Action:
              - 'apigateway:*'
            Resource: !Sub 'arn:aws:apigateway:${AWS::Region}::*'
            Effect: Allow
          - Action:
              - 'iam:GetRole'
              - 'iam:CreateRole'
              - 'iam:DeleteRole'
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${AppName}-*'
            Effect: Allow
          - Action:
              - 'iam:AttachRolePolicy'
              - 'iam:DetachRolePolicy'
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${AppName}-*'
            Effect: Allow
          - Action:
              - 'iam:PassRole'
            Resource:
              - '*'
            Effect: Allow
          - Effect: Allow
            Action:
              - logs:*
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
              - xray:*
            Resource: "*"
          - Effect: Allow
            Action:
              - ec2:*
            Resource: "*"
          - Action:
              - 'cloudformation:CreateChangeSet'
            Resource: !Sub >-
              arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31
            Effect: Allow
          - Effect: Allow
            Action:
              - "cognito-identity:*"
              - "cognito-idp:*"
              - "cognito-sync:*"
              - "iam:ListRoles"
              - "iam:ListOpenIdConnectProviders"
              - "sns:ListPlatformApplications"
            Resource: "*"
      Roles:
        - !Ref CloudFormationTrustRole
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4185b8e6-d3dd-42dc-8f3c-545d4d41bfcd
  CodePipelineTrustRole:
    Description: Creating service role in IAM for AWS CodePipeline
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AppName}-codepipeline-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b709845d-7749-4a9d-a303-ee92ac7e1836
  CodePipelineRolePolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: CodePipelineTrustRole
    Description: Setting IAM policy for the service role for AWS CodePipeline
    Properties:
      PolicyName: !Sub '${AppName}-codepipeline-role-policy'
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetBucketVersioning'
            Resource: '*'
            Effect: Allow
          - Action:
              - 's3:PutObject'
            Resource:
              - 'arn:aws:s3:::codepipeline*'
            Effect: Allow
          - Action:
              - 'codebuild:StartBuild'
              - 'codebuild:BatchGetBuilds'
            Resource: '*'
            Effect: Allow
          - Action:
              - 'cloudwatch:*'
              - 's3:*'
              - 'sns:*'
              - 'cloudformation:*'
              - 'rds:*'
              - 'sqs:*'
              - 'iam:PassRole'
            Resource: '*'
            Effect: Allow
          - Action:
              - 'lambda:InvokeFunction'
              - 'lambda:ListFunctions'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref CodePipelineTrustRole
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2242854e-0163-4eeb-9d26-8193c581e858
  CodeBuildStagingProject:
    DependsOn:
      - s3artifactsbucket
      - CodeBuildTrustRole
    Description: app staging project
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub 'Building stage for ${AppName}.'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: S3_ARTIFACT_BUCKET
            Value: !Ref s3artifactsbucket
          - Name: INPUT_FILE
            Value: !Ref StagingSAMInputFile
          - Name: CONFIG_FOLDER
            Value: !Ref StagingConfigFolder
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
      Name: !Sub '${AppName}-build-staging'
      ServiceRole: !GetAtt
        - CodeBuildTrustRole
        - Arn
      Source:
        BuildSpec: !Ref StagingBuildSpec
        Type: CODEPIPELINE
      Tags:
        - Key: app-name
          Value: !Ref AppName
        - Key: Name
          Value: !Sub '${AppName}-staging-project'
      TimeoutInMinutes: 5
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cdcfce15-ce2a-4b97-9797-54542c3ad9cb
  CodeBuildProductionProject:
    DependsOn:
      - s3artifactsbucket
      - CodeBuildTrustRole
    Description: app production project
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub 'Building production for ${AppName}.'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: S3_ARTIFACT_BUCKET
            Value: !Ref s3artifactsbucket
          - Name: INPUT_FILE
            Value: !Ref SAMInputFile
          - Name: CONFIG_FOLDER
            Value: !Ref ProdConfigFolder
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
      Name: !Sub '${AppName}-build-production'
      ServiceRole: !GetAtt
        - CodeBuildTrustRole
        - Arn
      Source:
        BuildSpec: !Ref ProductionBuildSpec
        Type: CODEPIPELINE
      Tags:
        - Key: app-name
          Value: !Ref AppName
        - Key: Name
          Value: !Sub '${AppName}-production-project'
      TimeoutInMinutes: 5
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 160a31d7-921d-47a5-be1e-5c2026c6ec7c
  s3artifactsbucket:
    Description: app artifacts
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub 'serverless-app-${AWS::AccountId}-${AWS::Region}-${AppName}'
      VersioningConfiguration:
        Status: Enabled
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 595aeea1-e43a-43b3-8bf2-b1bbf8433980
  s3artifactbucketpolicy:
    DependsOn:
      - s3artifactsbucket
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref s3artifactsbucket
      PolicyDocument:
        Version: 2012-10-17
        Id: SSEAndSSLPolicy
        Statement:
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${s3artifactsbucket}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d7052ceb-b72f-488e-acfe-cd9145d85f16
  ProjectPipeline:
    DependsOn:
      - s3artifactsbucket
      - CodeBuildStagingProject
      - CodeBuildProductionProject
      - CodePipelineTrustRole
      - CloudFormationTrustRole
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Sub '${AppName}-pipeline'
      RoleArn: !GetAtt
        - CodePipelineTrustRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: source
              InputArtifacts: []
              ActionTypeId:
                Version: '1'
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
              OutputArtifacts:
                - Name: !Sub '${AppName}-SourceArtifact'
              Configuration:
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubRepoBranch
                OAuthToken: !Ref GitHubToken
                Owner: !Ref GitHubUser
              RunOrder: 1
        - Name: StagingBuild
          Actions:
            - Name: staging-build-from-source
              InputArtifacts:
                - Name: !Sub '${AppName}-SourceArtifact'
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: !Sub '${AppName}-StagingBuildArtifact'
              Configuration:
                ProjectName: !Sub '${AppName}-build-staging'
              RunOrder: 1
        - Name: StagingDeploy
          Actions:
            - Name: create-changeset
              InputArtifacts:
                - Name: !Sub '${AppName}-StagingBuildArtifact'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              OutputArtifacts: []
              Configuration:
                StackName: !Sub '${AppName}-staging-app'
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt
                  - CloudFormationTrustRole
                  - Arn
                ChangeSetName: pipeline-changeset
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: !Sub '${AppName}-StagingBuildArtifact::${StagingSAMOutputFile}'
              RunOrder: 1
            - Name: execute-changeset
              InputArtifacts: []
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              OutputArtifacts: []
              Configuration:
                StackName: !Sub '${AppName}-staging-app'
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset
              RunOrder: 2
        - Name: ManualApproval
          Actions:
            - Name: QA
              InputArtifacts: []
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              OutputArtifacts: []
              RunOrder: 1
        - Name: CodeBuildProductionProject
          Actions:
            - Name: production-build-from-source
              InputArtifacts:
                - Name: !Sub '${AppName}-SourceArtifact'
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: !Sub '${AppName}-BuildArtifact'
              Configuration:
                ProjectName: !Sub '${AppName}-build-production'
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: create-changeset
              InputArtifacts:
                - Name: !Sub '${AppName}-BuildArtifact'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              OutputArtifacts: []
              Configuration:
                StackName: !Sub '${AppName}-production-app'
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt
                  - CloudFormationTrustRole
                  - Arn
                ChangeSetName: pipeline-changeset
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: !Sub '${AppName}-BuildArtifact::${SAMOutputFile}'
              RunOrder: 1
            - Name: execute-changeset
              InputArtifacts: []
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              OutputArtifacts: []
              Configuration:
                StackName: !Sub '${AppName}-production-app'
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset
              RunOrder: 2
      ArtifactStore:
        Type: S3
        Location: !Ref s3artifactsbucket
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4a7a8577-cc8d-4cd8-9145-813808be6344
  SnsTopic:
    Type: 'AWS::SNS::Topic'
    Description: notify to app manager
    Properties:
      Subscription:
        - Endpoint: !Ref ManagerEmail
          Protocol: email
  SnsTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: CloudWatchEventPolicy
        Statement:
          - Sid: !Sub '${AppName}-statement-id'
            Effect: Allow
            Principal:
              AWS: "*"
            Action: sns:Publish
            Resource: !Ref CodePipelineStatusChangeEvent
      Topics:
        - !Ref SnsTopic
  CodePipelineStatusChangeEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: CodePipeline status change event
      State: "ENABLED"
      Targets:
        - Arn: !Ref SnsTopic
          Id: 'SnsTopic'
          InputTransformer:
            InputPathsMap:
              pipeline: '$.detail.pipeline'
              stage: '$.detail.stage'
              state: '$.detail.state'
              time: '$.time'
            InputTemplate: '"<pipeline> Stage <stage> is <state>. time: <time>"'
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Stage Execution State Change
        detail:
          state:
            - FAILED

Outputs:
  CloudFormationTrustRoleArn:
    Description: CloudFormation trust roll for app
    Value: !GetAtt CloudFormationTrustRole.Arn
    Export:
      Name: !Sub 'Export${AppName}CloudFormationTrustRole'
  AppSgId:
    Description: AppSg
    Value: !Ref AppSg
    Export:
      Name: !Sub 'Export${AppName}Id'